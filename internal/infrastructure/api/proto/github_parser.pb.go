// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: internal/infrastructure/api/proto/github_parser.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запросы и ответы для работы с репозиториями
type ParseRepositoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseRepositoryRequest) Reset() {
	*x = ParseRepositoryRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRepositoryRequest) ProtoMessage() {}

func (x *ParseRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRepositoryRequest.ProtoReflect.Descriptor instead.
func (*ParseRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{0}
}

func (x *ParseRepositoryRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ParseRepositoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ParseRepositoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repository    *Repository            `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseRepositoryResponse) Reset() {
	*x = ParseRepositoryResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRepositoryResponse) ProtoMessage() {}

func (x *ParseRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRepositoryResponse.ProtoReflect.Descriptor instead.
func (*ParseRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{1}
}

func (x *ParseRepositoryResponse) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

type ListRepositoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerLogin    string                 `protobuf:"bytes,1,opt,name=owner_login,json=ownerLogin,proto3" json:"owner_login,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	MinStars      int32                  `protobuf:"varint,3,opt,name=min_stars,json=minStars,proto3" json:"min_stars,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoriesRequest) Reset() {
	*x = ListRepositoriesRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesRequest) ProtoMessage() {}

func (x *ListRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{2}
}

func (x *ListRepositoriesRequest) GetOwnerLogin() string {
	if x != nil {
		return x.OwnerLogin
	}
	return ""
}

func (x *ListRepositoriesRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ListRepositoriesRequest) GetMinStars() int32 {
	if x != nil {
		return x.MinStars
	}
	return 0
}

func (x *ListRepositoriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRepositoriesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListRepositoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repositories  []*Repository          `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoriesResponse) Reset() {
	*x = ListRepositoriesResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesResponse) ProtoMessage() {}

func (x *ListRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{3}
}

func (x *ListRepositoriesResponse) GetRepositories() []*Repository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *ListRepositoriesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Repository struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FullName        string                 `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IsPrivate       bool                   `protobuf:"varint,5,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	OwnerLogin      string                 `protobuf:"bytes,6,opt,name=owner_login,json=ownerLogin,proto3" json:"owner_login,omitempty"`
	Language        string                 `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	StarsCount      int32                  `protobuf:"varint,8,opt,name=stars_count,json=starsCount,proto3" json:"stars_count,omitempty"`
	ForksCount      int32                  `protobuf:"varint,9,opt,name=forks_count,json=forksCount,proto3" json:"forks_count,omitempty"`
	OpenIssuesCount int32                  `protobuf:"varint,10,opt,name=open_issues_count,json=openIssuesCount,proto3" json:"open_issues_count,omitempty"`
	CreatedAt       string                 `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string                 `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Repository) Reset() {
	*x = Repository{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{4}
}

func (x *Repository) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repository) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Repository) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Repository) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *Repository) GetOwnerLogin() string {
	if x != nil {
		return x.OwnerLogin
	}
	return ""
}

func (x *Repository) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Repository) GetStarsCount() int32 {
	if x != nil {
		return x.StarsCount
	}
	return 0
}

func (x *Repository) GetForksCount() int32 {
	if x != nil {
		return x.ForksCount
	}
	return 0
}

func (x *Repository) GetOpenIssuesCount() int32 {
	if x != nil {
		return x.OpenIssuesCount
	}
	return 0
}

func (x *Repository) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Repository) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Запросы и ответы для работы с issues
type ParseIssuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo          string                 `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseIssuesRequest) Reset() {
	*x = ParseIssuesRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseIssuesRequest) ProtoMessage() {}

func (x *ParseIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseIssuesRequest.ProtoReflect.Descriptor instead.
func (*ParseIssuesRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{5}
}

func (x *ParseIssuesRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ParseIssuesRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type ParseIssuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issues        []*Issue               `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseIssuesResponse) Reset() {
	*x = ParseIssuesResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseIssuesResponse) ProtoMessage() {}

func (x *ParseIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseIssuesResponse.ProtoReflect.Descriptor instead.
func (*ParseIssuesResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{6}
}

func (x *ParseIssuesResponse) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type ListIssuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  int64                  `protobuf:"varint,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIssuesRequest) Reset() {
	*x = ListIssuesRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssuesRequest) ProtoMessage() {}

func (x *ListIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssuesRequest.ProtoReflect.Descriptor instead.
func (*ListIssuesRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{7}
}

func (x *ListIssuesRequest) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *ListIssuesRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ListIssuesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListIssuesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListIssuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issues        []*Issue               `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIssuesResponse) Reset() {
	*x = ListIssuesResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssuesResponse) ProtoMessage() {}

func (x *ListIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssuesResponse.ProtoReflect.Descriptor instead.
func (*ListIssuesResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{8}
}

func (x *ListIssuesResponse) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *ListIssuesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Issue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	State         string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	AuthorLogin   string                 `protobuf:"bytes,6,opt,name=author_login,json=authorLogin,proto3" json:"author_login,omitempty"`
	RepositoryId  int64                  `protobuf:"varint,7,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ClosedAt      string                 `protobuf:"bytes,10,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Issue) Reset() {
	*x = Issue{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{9}
}

func (x *Issue) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Issue) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Issue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Issue) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Issue) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Issue) GetAuthorLogin() string {
	if x != nil {
		return x.AuthorLogin
	}
	return ""
}

func (x *Issue) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *Issue) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Issue) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Issue) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

// Запросы и ответы для работы с pull requests
type ParsePullRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo          string                 `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParsePullRequestsRequest) Reset() {
	*x = ParsePullRequestsRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParsePullRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsePullRequestsRequest) ProtoMessage() {}

func (x *ParsePullRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsePullRequestsRequest.ProtoReflect.Descriptor instead.
func (*ParsePullRequestsRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{10}
}

func (x *ParsePullRequestsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ParsePullRequestsRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type ParsePullRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PullRequests  []*PullRequest         `protobuf:"bytes,1,rep,name=pull_requests,json=pullRequests,proto3" json:"pull_requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParsePullRequestsResponse) Reset() {
	*x = ParsePullRequestsResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParsePullRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsePullRequestsResponse) ProtoMessage() {}

func (x *ParsePullRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsePullRequestsResponse.ProtoReflect.Descriptor instead.
func (*ParsePullRequestsResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{11}
}

func (x *ParsePullRequestsResponse) GetPullRequests() []*PullRequest {
	if x != nil {
		return x.PullRequests
	}
	return nil
}

type ListPullRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  int64                  `protobuf:"varint,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPullRequestsRequest) Reset() {
	*x = ListPullRequestsRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPullRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPullRequestsRequest) ProtoMessage() {}

func (x *ListPullRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPullRequestsRequest.ProtoReflect.Descriptor instead.
func (*ListPullRequestsRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{12}
}

func (x *ListPullRequestsRequest) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *ListPullRequestsRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ListPullRequestsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPullRequestsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListPullRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PullRequests  []*PullRequest         `protobuf:"bytes,1,rep,name=pull_requests,json=pullRequests,proto3" json:"pull_requests,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPullRequestsResponse) Reset() {
	*x = ListPullRequestsResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPullRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPullRequestsResponse) ProtoMessage() {}

func (x *ListPullRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPullRequestsResponse.ProtoReflect.Descriptor instead.
func (*ListPullRequestsResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{13}
}

func (x *ListPullRequestsResponse) GetPullRequests() []*PullRequest {
	if x != nil {
		return x.PullRequests
	}
	return nil
}

func (x *ListPullRequestsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type PullRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	State         string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	AuthorLogin   string                 `protobuf:"bytes,6,opt,name=author_login,json=authorLogin,proto3" json:"author_login,omitempty"`
	RepositoryId  int64                  `protobuf:"varint,7,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	MergedAt      string                 `protobuf:"bytes,10,opt,name=merged_at,json=mergedAt,proto3" json:"merged_at,omitempty"`
	ClosedAt      string                 `protobuf:"bytes,11,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{14}
}

func (x *PullRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PullRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PullRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PullRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PullRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PullRequest) GetAuthorLogin() string {
	if x != nil {
		return x.AuthorLogin
	}
	return ""
}

func (x *PullRequest) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *PullRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PullRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PullRequest) GetMergedAt() string {
	if x != nil {
		return x.MergedAt
	}
	return ""
}

func (x *PullRequest) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

// Запросы и ответы для работы с пользователями
type ParseUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseUserRequest) Reset() {
	*x = ParseUserRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUserRequest) ProtoMessage() {}

func (x *ParseUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUserRequest.ProtoReflect.Descriptor instead.
func (*ParseUserRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{15}
}

func (x *ParseUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ParseUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseUserResponse) Reset() {
	*x = ParseUserResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUserResponse) ProtoMessage() {}

func (x *ParseUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUserResponse.ProtoReflect.Descriptor instead.
func (*ParseUserResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{16}
}

func (x *ParseUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{17}
}

func (x *ListUsersRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ListUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUsersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{18}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Login         string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Bio           string                 `protobuf:"bytes,6,opt,name=bio,proto3" json:"bio,omitempty"`
	Company       string                 `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Location      string                 `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{19}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *User) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *User) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *User) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *User) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *User) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Запросы и ответы для работы с задачами парсинга
type StartParsingJobRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OwnerName         string                 `protobuf:"bytes,1,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	RepoName          string                 `protobuf:"bytes,2,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	ParseIssues       bool                   `protobuf:"varint,3,opt,name=parse_issues,json=parseIssues,proto3" json:"parse_issues,omitempty"`
	ParsePullRequests bool                   `protobuf:"varint,4,opt,name=parse_pull_requests,json=parsePullRequests,proto3" json:"parse_pull_requests,omitempty"`
	ParseUsers        bool                   `protobuf:"varint,5,opt,name=parse_users,json=parseUsers,proto3" json:"parse_users,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StartParsingJobRequest) Reset() {
	*x = StartParsingJobRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartParsingJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartParsingJobRequest) ProtoMessage() {}

func (x *StartParsingJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartParsingJobRequest.ProtoReflect.Descriptor instead.
func (*StartParsingJobRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{20}
}

func (x *StartParsingJobRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *StartParsingJobRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *StartParsingJobRequest) GetParseIssues() bool {
	if x != nil {
		return x.ParseIssues
	}
	return false
}

func (x *StartParsingJobRequest) GetParsePullRequests() bool {
	if x != nil {
		return x.ParsePullRequests
	}
	return false
}

func (x *StartParsingJobRequest) GetParseUsers() bool {
	if x != nil {
		return x.ParseUsers
	}
	return false
}

type StartParsingJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartParsingJobResponse) Reset() {
	*x = StartParsingJobResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartParsingJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartParsingJobResponse) ProtoMessage() {}

func (x *StartParsingJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartParsingJobResponse.ProtoReflect.Descriptor instead.
func (*StartParsingJobResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{21}
}

func (x *StartParsingJobResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type GetParsingJobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetParsingJobStatusRequest) Reset() {
	*x = GetParsingJobStatusRequest{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParsingJobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParsingJobStatusRequest) ProtoMessage() {}

func (x *GetParsingJobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParsingJobStatusRequest.ProtoReflect.Descriptor instead.
func (*GetParsingJobStatusRequest) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{22}
}

func (x *GetParsingJobStatusRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type GetParsingJobStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Progress      int32                  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetParsingJobStatusResponse) Reset() {
	*x = GetParsingJobStatusResponse{}
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParsingJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParsingJobStatusResponse) ProtoMessage() {}

func (x *GetParsingJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_infrastructure_api_proto_github_parser_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParsingJobStatusResponse.ProtoReflect.Descriptor instead.
func (*GetParsingJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP(), []int{23}
}

func (x *GetParsingJobStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetParsingJobStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetParsingJobStatusResponse) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GetParsingJobStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetParsingJobStatusResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetParsingJobStatusResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_internal_infrastructure_api_proto_github_parser_proto protoreflect.FileDescriptor

const file_internal_infrastructure_api_proto_github_parser_proto_rawDesc = "" +
	"\n" +
	"5internal/infrastructure/api/proto/github_parser.proto\x12\rgithub.parser\"B\n" +
	"\x16ParseRepositoryRequest\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\tR\x05owner\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"T\n" +
	"\x17ParseRepositoryResponse\x129\n" +
	"\n" +
	"repository\x18\x01 \x01(\v2\x19.github.parser.RepositoryR\n" +
	"repository\"\xa1\x01\n" +
	"\x17ListRepositoriesRequest\x12\x1f\n" +
	"\vowner_login\x18\x01 \x01(\tR\n" +
	"ownerLogin\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x1b\n" +
	"\tmin_stars\x18\x03 \x01(\x05R\bminStars\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"z\n" +
	"\x18ListRepositoriesResponse\x12=\n" +
	"\frepositories\x18\x01 \x03(\v2\x19.github.parser.RepositoryR\frepositories\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xf7\x02\n" +
	"\n" +
	"Repository\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tfull_name\x18\x03 \x01(\tR\bfullName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"is_private\x18\x05 \x01(\bR\tisPrivate\x12\x1f\n" +
	"\vowner_login\x18\x06 \x01(\tR\n" +
	"ownerLogin\x12\x1a\n" +
	"\blanguage\x18\a \x01(\tR\blanguage\x12\x1f\n" +
	"\vstars_count\x18\b \x01(\x05R\n" +
	"starsCount\x12\x1f\n" +
	"\vforks_count\x18\t \x01(\x05R\n" +
	"forksCount\x12*\n" +
	"\x11open_issues_count\x18\n" +
	" \x01(\x05R\x0fopenIssuesCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\f \x01(\tR\tupdatedAt\">\n" +
	"\x12ParseIssuesRequest\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\tR\x05owner\x12\x12\n" +
	"\x04repo\x18\x02 \x01(\tR\x04repo\"C\n" +
	"\x13ParseIssuesResponse\x12,\n" +
	"\x06issues\x18\x01 \x03(\v2\x14.github.parser.IssueR\x06issues\"|\n" +
	"\x11ListIssuesRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\x03R\frepositoryId\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"c\n" +
	"\x12ListIssuesResponse\x12,\n" +
	"\x06issues\x18\x01 \x03(\v2\x14.github.parser.IssueR\x06issues\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x92\x02\n" +
	"\x05Issue\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12!\n" +
	"\fauthor_login\x18\x06 \x01(\tR\vauthorLogin\x12#\n" +
	"\rrepository_id\x18\a \x01(\x03R\frepositoryId\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\x12\x1b\n" +
	"\tclosed_at\x18\n" +
	" \x01(\tR\bclosedAt\"D\n" +
	"\x18ParsePullRequestsRequest\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\tR\x05owner\x12\x12\n" +
	"\x04repo\x18\x02 \x01(\tR\x04repo\"\\\n" +
	"\x19ParsePullRequestsResponse\x12?\n" +
	"\rpull_requests\x18\x01 \x03(\v2\x1a.github.parser.PullRequestR\fpullRequests\"\x82\x01\n" +
	"\x17ListPullRequestsRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\x03R\frepositoryId\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"|\n" +
	"\x18ListPullRequestsResponse\x12?\n" +
	"\rpull_requests\x18\x01 \x03(\v2\x1a.github.parser.PullRequestR\fpullRequests\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xb5\x02\n" +
	"\vPullRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12!\n" +
	"\fauthor_login\x18\x06 \x01(\tR\vauthorLogin\x12#\n" +
	"\rrepository_id\x18\a \x01(\x03R\frepositoryId\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\x12\x1b\n" +
	"\tmerged_at\x18\n" +
	" \x01(\tR\bmergedAt\x12\x1b\n" +
	"\tclosed_at\x18\v \x01(\tR\bclosedAt\".\n" +
	"\x10ParseUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"<\n" +
	"\x11ParseUserResponse\x12'\n" +
	"\x04user\x18\x01 \x01(\v2\x13.github.parser.UserR\x04user\"V\n" +
	"\x10ListUsersRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"_\n" +
	"\x11ListUsersResponse\x12)\n" +
	"\x05users\x18\x01 \x03(\v2\x13.github.parser.UserR\x05users\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xfb\x01\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05login\x18\x02 \x01(\tR\x05login\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x05 \x01(\tR\tavatarUrl\x12\x10\n" +
	"\x03bio\x18\x06 \x01(\tR\x03bio\x12\x18\n" +
	"\acompany\x18\a \x01(\tR\acompany\x12\x1a\n" +
	"\blocation\x18\b \x01(\tR\blocation\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\tR\tupdatedAt\"\xc8\x01\n" +
	"\x16StartParsingJobRequest\x12\x1d\n" +
	"\n" +
	"owner_name\x18\x01 \x01(\tR\townerName\x12\x1b\n" +
	"\trepo_name\x18\x02 \x01(\tR\brepoName\x12!\n" +
	"\fparse_issues\x18\x03 \x01(\bR\vparseIssues\x12.\n" +
	"\x13parse_pull_requests\x18\x04 \x01(\bR\x11parsePullRequests\x12\x1f\n" +
	"\vparse_users\x18\x05 \x01(\bR\n" +
	"parseUsers\"0\n" +
	"\x17StartParsingJobResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"3\n" +
	"\x1aGetParsingJobStatusRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"\xc4\x01\n" +
	"\x1bGetParsingJobStatusResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x05R\bprogress\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt2\xc2\a\n" +
	"\x13GithubParserService\x12`\n" +
	"\x0fParseRepository\x12%.github.parser.ParseRepositoryRequest\x1a&.github.parser.ParseRepositoryResponse\x12c\n" +
	"\x10ListRepositories\x12&.github.parser.ListRepositoriesRequest\x1a'.github.parser.ListRepositoriesResponse\x12T\n" +
	"\vParseIssues\x12!.github.parser.ParseIssuesRequest\x1a\".github.parser.ParseIssuesResponse\x12Q\n" +
	"\n" +
	"ListIssues\x12 .github.parser.ListIssuesRequest\x1a!.github.parser.ListIssuesResponse\x12f\n" +
	"\x11ParsePullRequests\x12'.github.parser.ParsePullRequestsRequest\x1a(.github.parser.ParsePullRequestsResponse\x12c\n" +
	"\x10ListPullRequests\x12&.github.parser.ListPullRequestsRequest\x1a'.github.parser.ListPullRequestsResponse\x12N\n" +
	"\tParseUser\x12\x1f.github.parser.ParseUserRequest\x1a .github.parser.ParseUserResponse\x12N\n" +
	"\tListUsers\x12\x1f.github.parser.ListUsersRequest\x1a .github.parser.ListUsersResponse\x12`\n" +
	"\x0fStartParsingJob\x12%.github.parser.StartParsingJobRequest\x1a&.github.parser.StartParsingJobResponse\x12l\n" +
	"\x13GetParsingJobStatus\x12).github.parser.GetParsingJobStatusRequest\x1a*.github.parser.GetParsingJobStatusResponseBCZAgithub.com/Dhoini/GitHub_Parser/internal/infrastructure/api/protob\x06proto3"

var (
	file_internal_infrastructure_api_proto_github_parser_proto_rawDescOnce sync.Once
	file_internal_infrastructure_api_proto_github_parser_proto_rawDescData []byte
)

func file_internal_infrastructure_api_proto_github_parser_proto_rawDescGZIP() []byte {
	file_internal_infrastructure_api_proto_github_parser_proto_rawDescOnce.Do(func() {
		file_internal_infrastructure_api_proto_github_parser_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_infrastructure_api_proto_github_parser_proto_rawDesc), len(file_internal_infrastructure_api_proto_github_parser_proto_rawDesc)))
	})
	return file_internal_infrastructure_api_proto_github_parser_proto_rawDescData
}

var file_internal_infrastructure_api_proto_github_parser_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_internal_infrastructure_api_proto_github_parser_proto_goTypes = []any{
	(*ParseRepositoryRequest)(nil),      // 0: github.parser.ParseRepositoryRequest
	(*ParseRepositoryResponse)(nil),     // 1: github.parser.ParseRepositoryResponse
	(*ListRepositoriesRequest)(nil),     // 2: github.parser.ListRepositoriesRequest
	(*ListRepositoriesResponse)(nil),    // 3: github.parser.ListRepositoriesResponse
	(*Repository)(nil),                  // 4: github.parser.Repository
	(*ParseIssuesRequest)(nil),          // 5: github.parser.ParseIssuesRequest
	(*ParseIssuesResponse)(nil),         // 6: github.parser.ParseIssuesResponse
	(*ListIssuesRequest)(nil),           // 7: github.parser.ListIssuesRequest
	(*ListIssuesResponse)(nil),          // 8: github.parser.ListIssuesResponse
	(*Issue)(nil),                       // 9: github.parser.Issue
	(*ParsePullRequestsRequest)(nil),    // 10: github.parser.ParsePullRequestsRequest
	(*ParsePullRequestsResponse)(nil),   // 11: github.parser.ParsePullRequestsResponse
	(*ListPullRequestsRequest)(nil),     // 12: github.parser.ListPullRequestsRequest
	(*ListPullRequestsResponse)(nil),    // 13: github.parser.ListPullRequestsResponse
	(*PullRequest)(nil),                 // 14: github.parser.PullRequest
	(*ParseUserRequest)(nil),            // 15: github.parser.ParseUserRequest
	(*ParseUserResponse)(nil),           // 16: github.parser.ParseUserResponse
	(*ListUsersRequest)(nil),            // 17: github.parser.ListUsersRequest
	(*ListUsersResponse)(nil),           // 18: github.parser.ListUsersResponse
	(*User)(nil),                        // 19: github.parser.User
	(*StartParsingJobRequest)(nil),      // 20: github.parser.StartParsingJobRequest
	(*StartParsingJobResponse)(nil),     // 21: github.parser.StartParsingJobResponse
	(*GetParsingJobStatusRequest)(nil),  // 22: github.parser.GetParsingJobStatusRequest
	(*GetParsingJobStatusResponse)(nil), // 23: github.parser.GetParsingJobStatusResponse
}
var file_internal_infrastructure_api_proto_github_parser_proto_depIdxs = []int32{
	4,  // 0: github.parser.ParseRepositoryResponse.repository:type_name -> github.parser.Repository
	4,  // 1: github.parser.ListRepositoriesResponse.repositories:type_name -> github.parser.Repository
	9,  // 2: github.parser.ParseIssuesResponse.issues:type_name -> github.parser.Issue
	9,  // 3: github.parser.ListIssuesResponse.issues:type_name -> github.parser.Issue
	14, // 4: github.parser.ParsePullRequestsResponse.pull_requests:type_name -> github.parser.PullRequest
	14, // 5: github.parser.ListPullRequestsResponse.pull_requests:type_name -> github.parser.PullRequest
	19, // 6: github.parser.ParseUserResponse.user:type_name -> github.parser.User
	19, // 7: github.parser.ListUsersResponse.users:type_name -> github.parser.User
	0,  // 8: github.parser.GithubParserService.ParseRepository:input_type -> github.parser.ParseRepositoryRequest
	2,  // 9: github.parser.GithubParserService.ListRepositories:input_type -> github.parser.ListRepositoriesRequest
	5,  // 10: github.parser.GithubParserService.ParseIssues:input_type -> github.parser.ParseIssuesRequest
	7,  // 11: github.parser.GithubParserService.ListIssues:input_type -> github.parser.ListIssuesRequest
	10, // 12: github.parser.GithubParserService.ParsePullRequests:input_type -> github.parser.ParsePullRequestsRequest
	12, // 13: github.parser.GithubParserService.ListPullRequests:input_type -> github.parser.ListPullRequestsRequest
	15, // 14: github.parser.GithubParserService.ParseUser:input_type -> github.parser.ParseUserRequest
	17, // 15: github.parser.GithubParserService.ListUsers:input_type -> github.parser.ListUsersRequest
	20, // 16: github.parser.GithubParserService.StartParsingJob:input_type -> github.parser.StartParsingJobRequest
	22, // 17: github.parser.GithubParserService.GetParsingJobStatus:input_type -> github.parser.GetParsingJobStatusRequest
	1,  // 18: github.parser.GithubParserService.ParseRepository:output_type -> github.parser.ParseRepositoryResponse
	3,  // 19: github.parser.GithubParserService.ListRepositories:output_type -> github.parser.ListRepositoriesResponse
	6,  // 20: github.parser.GithubParserService.ParseIssues:output_type -> github.parser.ParseIssuesResponse
	8,  // 21: github.parser.GithubParserService.ListIssues:output_type -> github.parser.ListIssuesResponse
	11, // 22: github.parser.GithubParserService.ParsePullRequests:output_type -> github.parser.ParsePullRequestsResponse
	13, // 23: github.parser.GithubParserService.ListPullRequests:output_type -> github.parser.ListPullRequestsResponse
	16, // 24: github.parser.GithubParserService.ParseUser:output_type -> github.parser.ParseUserResponse
	18, // 25: github.parser.GithubParserService.ListUsers:output_type -> github.parser.ListUsersResponse
	21, // 26: github.parser.GithubParserService.StartParsingJob:output_type -> github.parser.StartParsingJobResponse
	23, // 27: github.parser.GithubParserService.GetParsingJobStatus:output_type -> github.parser.GetParsingJobStatusResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_internal_infrastructure_api_proto_github_parser_proto_init() }
func file_internal_infrastructure_api_proto_github_parser_proto_init() {
	if File_internal_infrastructure_api_proto_github_parser_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_infrastructure_api_proto_github_parser_proto_rawDesc), len(file_internal_infrastructure_api_proto_github_parser_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_infrastructure_api_proto_github_parser_proto_goTypes,
		DependencyIndexes: file_internal_infrastructure_api_proto_github_parser_proto_depIdxs,
		MessageInfos:      file_internal_infrastructure_api_proto_github_parser_proto_msgTypes,
	}.Build()
	File_internal_infrastructure_api_proto_github_parser_proto = out.File
	file_internal_infrastructure_api_proto_github_parser_proto_goTypes = nil
	file_internal_infrastructure_api_proto_github_parser_proto_depIdxs = nil
}
